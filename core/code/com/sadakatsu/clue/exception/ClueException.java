package com.sadakatsu.clue.exception;

import com.sadakatsu.clue.contestserver.Player;

/**
 * The ClueException class acts as a superclass for all the exceptions that
 * can be generated by an AI failing to follow the contest rules.  The main
 * functionality provided by this class is a constructor that receives the
 * connected Player that violated the rules, and an observer method that
 * retrieves the Player.  This enables a server to catch and disqualify entries
 * in real time. 
 * 
 * @author Joseph A. Craig
 */
@SuppressWarnings("serial")
public class ClueException extends Exception {
	Player player;
	
	/**
	 * Instantiates a Clue Exception without a Player object.  This constructor
	 * is intended for AIs.
	 * @param format
	 * An error message format String.
	 * @param args
	 * The arguments whose String representations are to be substituted into the
	 * format String.
	 */
	public ClueException(String format, Object...args) {
		super(String.format(format, args));
		player = null;
	}
	
	/**
	 * Instantiates a Clue Exception as having been caused by the passed Player
	 * object.  This constructor is intended for servers.
	 * @param player
	 * The Player whose connected AI caused this ClueException.
	 * @param format
	 * An error message format String.
	 * @param args
	 * The arguments whose String representations are to be substituted into the
	 * format String.
	 */
	public ClueException(Player player, String format, Object...args) {
		super(String.format(format, args));
		this.player = player;
	}
	
	/**
	 * @return
	 * The Player whose connected AI caused this ClueException.
	 */
	public Player getOffender() {
		return player;
	}
}
